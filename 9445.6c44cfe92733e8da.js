"use strict";(self.webpackChunkproject_portafolio=self.webpackChunkproject_portafolio||[]).push([[9445],{9445:(E,g,d)=>{d.r(g),d.d(g,{AbsorberInstance:()=>R});var t=d(1033),l=d(4441);const f=2*Math.PI;class R{constructor(s,n,r,b){this.absorbers=s,this.container=n,this._calcPosition=()=>{const i=(0,t.l1)({size:this.container.canvas.size,position:this.options.position});return t.Mi.create(i.x,i.y)},this._updateParticlePosition=(i,h)=>{if(i.destroyed)return;const a=this.container,o=a.canvas.size;if(i.needsNewPosition){const e=(0,t.Mh)({size:o});i.position.setTo(e),i.velocity.setTo(i.initialVelocity),i.absorberOrbit=void 0,i.needsNewPosition=!1}if(this.options.orbits){if(void 0===i.absorberOrbit&&(i.absorberOrbit=t.Mi.origin,i.absorberOrbit.length=(0,t.Yf)(i.getPosition(),this.position),i.absorberOrbit.angle=(0,t.G0)()*f),i.absorberOrbit.length<=this.size&&!this.options.destroy){const D=Math.min(o.width,o.height),A=.1,k=.2;i.absorberOrbit.length=D*((0,t.G0)()*k-A+1)}void 0===i.absorberOrbitDirection&&(i.absorberOrbitDirection=i.velocity.x>=0?"clockwise":"counter-clockwise");const e=i.absorberOrbit.length,y=i.absorberOrbit.angle,P=i.absorberOrbitDirection;i.velocity.setTo(t.Mi.origin);const z={x:"clockwise"===P?Math.cos:Math.sin,y:"clockwise"===P?Math.sin:Math.cos};i.position.x=this.position.x+e*z.x(y),i.position.y=this.position.y+e*z.y(y),i.absorberOrbit.length-=h.length,i.absorberOrbit.angle+=(i.retina.moveSpeed??0)*a.retina.pixelRatio/t.a5*a.retina.reduceFactor}else{const e=t.Mi.origin;e.length=h.length,e.angle=h.angle,i.velocity.addTo(e)}},this.initialPosition=b?t.Mi.create(b.x,b.y):void 0,r instanceof l.h?this.options=r:(this.options=new l.h,this.options.load(r)),this.dragging=!1,this.name=this.options.name,this.opacity=this.options.opacity,this.size=(0,t.VG)(this.options.size.value)*n.retina.pixelRatio,this.mass=this.size*this.options.size.density*n.retina.reduceFactor;const c=this.options.size.limit;this.limit={radius:c.radius*n.retina.pixelRatio*n.retina.reduceFactor,mass:c.mass},this.color=(0,t.BN)(this.options.color)??{b:0,g:0,r:0},this.position=this.initialPosition?.copy()??this._calcPosition()}attract(s){const n=this.container,r=this.options;if(r.draggable){const o=n.interactivity.mouse;o.clicking&&o.downPosition?(0,t.Yf)(this.position,o.downPosition)<=this.size&&(this.dragging=!0):this.dragging=!1,this.dragging&&o.position&&(this.position.x=o.position.x,this.position.y=o.position.y)}const b=s.getPosition(),{dx:c,dy:i,distance:h}=(0,t.vr)(this.position,b),a=t.Mi.create(c,i);if(a.length=this.mass/Math.pow(h,2)*n.retina.reduceFactor,h<this.size+s.getRadius()){const o=.033*s.getRadius()*n.retina.pixelRatio;this.size>s.getRadius()&&h<this.size-s.getRadius()||void 0!==s.absorberOrbit&&s.absorberOrbit.length<0?r.destroy?s.destroy():(s.needsNewPosition=!0,this._updateParticlePosition(s,a)):(r.destroy&&(s.size.value-=o),this._updateParticlePosition(s,a)),(this.limit.radius<=0||this.size<this.limit.radius)&&(this.size+=o),(this.limit.mass<=0||this.mass<this.limit.mass)&&(this.mass+=o*this.options.size.density*n.retina.reduceFactor)}else this._updateParticlePosition(s,a)}draw(s){s.translate(this.position.x,this.position.y),s.beginPath(),s.arc(0,0,this.size,0,f,!1),s.closePath(),s.fillStyle=(0,t.xx)(this.color,this.opacity),s.fill()}resize(){const s=this.initialPosition;this.position=s&&(0,t.Tj)(s,this.container.canvas.size,t.Mi.origin)?s:this._calcPosition()}}}}]);