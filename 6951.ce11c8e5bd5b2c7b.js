"use strict";(self.webpackChunkproject_portafolio=self.webpackChunkproject_portafolio||[]).push([[6951],{6951:(E,h,s)=>{s.r(h),s.d(h,{Emitters:()=>y});var u=s(467),m=s(1033);class y{constructor(t,e){var o=this;this.container=e,this._engine=t,this.array=[],this.emitters=[],this.interactivityEmitters={random:{count:1,enable:!1},value:[]},e.getEmitter=i=>void 0===i||(0,m.Et)(i)?this.array[i??0]:this.array.find(r=>r.name===i),e.addEmitter=function(){var i=(0,u.A)(function*(r,a){return o.addEmitter(r,a)});return function(r,a){return i.apply(this,arguments)}}(),e.removeEmitter=i=>{const r=e.getEmitter(i);r&&this.removeEmitter(r)},e.playEmitter=i=>{const r=e.getEmitter(i);r&&r.externalPlay()},e.pauseEmitter=i=>{const r=e.getEmitter(i);r&&r.externalPause()}}addEmitter(t,e){var o=this;return(0,u.A)(function*(){const{Emitter:n}=yield Promise.resolve().then(s.bind(s,5051)),{EmitterInstance:i}=yield s.e(8015).then(s.bind(s,8015)),r=new n;r.load(t);const a=new i(o._engine,o,o.container,r,e);return yield a.init(),o.array.push(a),a})()}handleClickMode(t){var e=this;const o=this.emitters,n=this.interactivityEmitters;if("emitter"!==t)return;let i;if(n&&(0,m.cy)(n.value))if(n.value.length>0&&n.random.enable){i=[];const l=[];for(let d=0;d<n.random.count;d++){const c=(0,m.n0)(n.value);l.includes(c)&&l.length<n.value.length?d--:(l.push(c),i.push((0,m.Vh)(n.value,c)))}}else i=n.value;else i=n?.value;const a=this.container.interactivity.mouse.clickPosition;(0,m.wJ)(i??o,function(){var f=(0,u.A)(function*(l){yield e.addEmitter(l,a)});return function(l){return f.apply(this,arguments)}}())}init(){var t=this;return(0,u.A)(function*(){if(t.emitters=t.container.actualOptions.emitters,t.interactivityEmitters=t.container.actualOptions.interactivity.modes.emitters,t.emitters)if((0,m.cy)(t.emitters))for(const e of t.emitters)yield t.addEmitter(e);else yield t.addEmitter(t.emitters)})()}pause(){for(const t of this.array)t.pause()}play(){for(const t of this.array)t.play()}removeEmitter(t){const e=this.array.indexOf(t);e>=0&&this.array.splice(e,1)}resize(){for(const t of this.array)t.resize()}stop(){this.array=[]}update(t){for(const e of this.array)e.update(t)}}}}]);